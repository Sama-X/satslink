type PaymentRecord = record {
  "principal" : principal;
  canister_id : text;
  eth_address : text;
  expiry_time : nat64;
  amount : nat;
  payment_create : nat64;
};
type PaymentStats = record {
  user_payments : vec PaymentRecord;
  user_vip_expiry : nat64;
  total_usd_value_all_users : float64;
  total_usd_value_user : float64;
  user_total_amount : nat;
  all_payments : vec PaymentRecord;
};
type Result = variant { Ok : float64; Err : text };
type Result_1 = variant { Ok : PaymentStats; Err : text };
type Result_2 = variant { Ok : bool; Err : text };
type Result_3 = variant { Ok; Err : text };
type WhitelistOperation = variant { Add; Remove; Check };
service : () -> {
  count_payment_users : () -> (nat64) query;
  get_icp_price : () -> (Result) query;
  get_payment_stats : () -> (Result_1) query;
  get_payments_by_eth_address : (text) -> (nat64) query;
  get_payments_by_principal : (text) -> (vec PaymentRecord) query;
  manage_whitelist : (text, WhitelistOperation) -> (Result_2);
  pay : (principal, nat, text, text) -> (Result_3);
  resume : () -> ();
  set_icp_price : (float64) -> (Result_3);
  stop : () -> ();
  subaccount_of : (principal) -> (blob) query;
}
