type ClaimRewardRequest = record { to : principal };
type ClaimRewardResponse = record { result : Result };
type GetTotalsResponse = record {
  your_pledge_eligibility_status : bool;
  total_vip_participants : nat64;
  your_vip_eligibility_status : bool;
  your_pledge_shares : nat;
  current_token_reward : nat;
  total_token_minted : nat;
  pos_round_delay_ns : nat64;
  is_satslink_enabled : bool;
  your_vip_shares : nat64;
  icp_to_cycles_exchange_rate : nat;
  your_vip_unclaimed_reward_e8s : nat;
  total_pledge_token_supply : nat;
  your_pledge_unclaimed_reward_e8s : nat;
  total_pledge_participants : nat64;
  total_token_dev : nat;
  total_token_lottery : nat;
  current_pos_round : nat64;
  current_share_fee : nat;
};
type GetVIPuserResponse = record {
  entry : vec record { blob; principal; nat64; nat; bool };
};
type LotteryRequest = record { qty_e8s_u64 : nat64 };
type PledgeRequest = record { qty_e8s_u64 : nat64 };
type RedeemRequest = record { to : principal };
type RedeemResponse = record { result : Result };
type RefundLostTokensRequest = record { kind : RefundTokenKind };
type RefundLostTokensResponse = record { results : vec Result };
type RefundTokenKind = variant { ICP : vec record { blob; nat64 } };
type Result = variant { Ok : nat; Err : text };
type StakeRequest = record { qty_e8s_u64 : nat64; address : blob };
type StakeResponse = record { result : Result; message : text };
type WithdrawRequest = record { to : principal; qty_e8s : nat };
service : () -> {
  can_migrate_stl_account : () -> (bool) query;
  claim_pledge_reward : (ClaimRewardRequest) -> (ClaimRewardResponse);
  claim_vip_reward : (ClaimRewardRequest) -> (ClaimRewardResponse);
  disable_satslink : () -> ();
  enable_satslink : () -> ();
  get_satslinkers : (blob) -> (GetVIPuserResponse) query;
  get_totals : () -> (GetTotalsResponse) query;
  migrate_stl_account : (ClaimRewardRequest) -> (record {});
  play_lottery : (LotteryRequest) -> (record {});
  pledge : (PledgeRequest) -> (record {});
  redeem : (RedeemRequest) -> (RedeemResponse);
  refund_lost_tokens : (RefundLostTokensRequest) -> (RefundLostTokensResponse);
  resume : () -> ();
  stake : (StakeRequest) -> (StakeResponse);
  stop : () -> ();
  subaccount_of : (principal) -> (blob) query;
  withdraw : (WithdrawRequest) -> (record {});
}
